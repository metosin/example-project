{:paths ["src/babashka"]
 :tasks {build {:doc "Build uberjar"
                ;; FIXME: Consider if it would be better to handle Cljs build in separate classpath
                :task (clojure "-T:shadow-cljs:frontend:backend:build uberjar")}
         outdated {:doc "Check depdendencies"
                   :task (clojure "-M:outdated")}
         lint {:doc "Lint"
               :task (shell "clj-kondo --lint src")}
         init-lint {:doc "Initialize clj-kondo cache and copy lib configs"
                    :task (shell "sh -c" "clj-kondo --copy-configs --lint $(clj -Spath -A:backend:frontend)")}
         test {:doc "Run backend unit tests"
               :task (clojure "-M:backend:test")}
         test-browser {:doc "Run cljs unit tests in a local browser"
                       :task (shell "npm run test-browser")}
         test-karma {:doc "Build and run cljs unit tests for/with Karma"
                     :task (shell "npm run test-karma")}
         -clean-svgs {:tasks (shell "rm target/gen/svg/* src/js/icons/*")}
         -svgr {:depends [-clean-svgs]
                :doc "Generate React component JSX files for svg files"
                :task (shell "npx @svgr/cli --out-dir target/gen/svg -- src/svg")}
         icons {:doc "Generate React component JS files for svg files"
                :depends [-svgr]
                :task (shell "npx babel target/gen/svg --out-dir src/js/icons")}

         db-up   {:doc "Start the database"
                  :task (shell "docker compose -p example-project up -d")}
         db-down {:doc "Stop the database"
                  :task (shell "docker compose -p example-project down -d")}

         native-image-agent {:doc      "Run backend with native-image-agent to collect metadata for building a native image"
                             :requires ([native-image :as n])
                             :task     (n/run-with-agent)}
         native-image       {:doc  "Build native image"
                             :task (shell "clojure -T:build:shadow-cljs native-image")}
         native-image-build {:doc  "Builds uberjar, then native-image and runs the app for verification"
                             :task (do
                                     (shell "bb build")
                                     (shell "bb native-image-agent")
                                     (shell "bb native-image")
                                     (shell {:extra-env {"CONFIG_EDN" "resources/config.edn"
                                                         "HTTP_PORT"  3333}}
                                            "target/app exit-after-start"))}}}
